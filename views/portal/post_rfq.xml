<odoo>
    <data>
        <template id="rfq_page" name="RFQ">
            <xpath expr="." position="inside">
                <link rel="stylesheet" type="text/css" href="/trademeda/static/src/css/rfq_page.css"/>
                <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"/>
            </xpath>
            <t t-call="trademeda.header">
                
            </t>
            <script>
                function hide_payment_terms(element){
                    element.style.display = 'none'
                }
                function main_clicked(){
                    hide_payment_terms(document.getElementById('payment_terms_info'))
                    update_progress()
                }
            </script>

            <main onclick="main_clicked()">
                <div class="container">
                    <form  action="/submitRfq" method="post" enctype="multipart/form-data">
                        <input type="hidden" name="csrf_token" t-att-value="request.csrf_token()" />
                        <h2 style="display:flex;justify-content:center;font-size:2rem;">Request for Quotation</h2>
                        <div class="text-input">
                            <div class="">
                                <span class="">Request Type</span>
                            </div>
                            <t t-set="request_typee" t-value="'product'"/>
                            <input type="hidden" id="request_type_value" t-att-value="request_typee"/>
                            <div class="radio-group">
                                <input type="radio" id="product" name="request_type" t-att-dataa="'product'" onchange="request_type_change(this)" value="product" checked="true"/>
                                <label for="product">Product</label>

                                <input type="radio" id="service" name="request_type" t-att-dataa="'service'" onchange="request_type_change(this)" value="service"/>
                                <label for="service">Service</label>
                            </div>
                        </div>

                        <div class="add-product">
                            <div class="text-input" style="margin-top:2px">
                                <div class="">
                                    <span class="">Upload Image</span>
                                </div>
                                <div class="file-upload-wrapper">
                                    <input onchange="file_change(this)" accept=".jpeg,.jpg,.png" type="file" id="upload_product" name="upload_product" class="file-input" data-file-name="upload_product_name" data-delete-btn="upload_product_delete"/>
                                    <label for="upload_product" class="image-file-label"><i class="fa-solid fa-upload"></i>Click to browse</label>
                                    <span id="upload_product_delete" onclick="clear_file(this)" class="file-delete"><i class="fa-regular fa-circle-xmark"></i></span>
                                    <span id="upload_product_name" class="file-name">No file chosen</span>
                                </div>   
                            </div>
                        </div>
                        <div style="display:flex;">        
                            <div class="text-input" style="width:50%">
                                <div class="">
                                    <span class="">Category</span>
                                </div>
                                <div class="select-container">
                                    
                                    <select id="category" name="category" onchange="category_change(this)" required='required'>
                                        <option value=""></option>

                                        <t t-foreach="env['product.categories'].sudo().search([('category_type','=',request_typee)])" t-as="option">
                                            <option t-att-value="option.id">
                                                <t t-esc="option.name"/>
                                            </option>
                                        </t>    
                                    </select>
                                </div>
                            </div>
                            <div class="text-input" style="width:50%">
                                <div class="">
                                    <span class="">SubCategories</span>
                                </div>
                                <div class="select-container">
                                   
                                    <select id="product_subcategory" name="product_subcategory" class="form-control" onchange="subcategory_change(this)" required='required'>
                                        <option value=''></option>
                                        
                                    </select>
                                </div>
                            </div>
                            
                        </div>
                        <div class="text-input">
                            <div class="">
                                <span class="">Sub-Subcategory</span>
                            </div>
                            <div class="select-container">
                                    
                                <select id="product_subsubcategory" name="product_subsubcategory" class="form-control" required='required'>
                                    <option value=''></option>
                                    
                                </select>
                            </div>
                        </div>
                        <div style="display:flex;">
                            <div class="text-input" style="width:50%">
                                <div class="">
                                    <span class="">Product</span>
                                </div>
                                <div class="">
                                    <input type="text" onchange="update_progress()" id="product_name" name="product" required='required'/>
                                </div>
                            </div>
                            <div class="text-input" style="width:30%">
                                <div class="">
                                    <span class="">Quantity</span>
                                </div>
                                <div class="">
                                    <input type="number" id="quantity" placeholder="1" name="quantity" required='required'/>
                                </div>
                            </div>
                            <div class="text-input" style="width:20%">
                                <div class="">
                                    <span class="">Unit</span>
                                </div>
                                <div class="select-container">
                                    
                                    <select id="unit" name="unit" required='required'>
                                        <option value=""></option>

                                        <t t-foreach="env['uom.uom'].sudo().search([])" t-as="option">
                                            <option t-att-value="option.id">
                                                <t t-esc="option.name"/>
                                            </option>
                                        </t>    
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="text-input">
                            <div class="">
                                <span class="">Product Specification</span>
                            </div>
                            <div class="">
                                <textarea onchange="update_progress()" id="product_specification" name="product_specification" required='required'/>
                                
                            </div>
                        </div>
                        <div style="display:flex;">        
                            <div class="text-input" style="width:35%">
                                <div class="">
                                    <span class="">Target Price</span>
                                </div>
                                <div class="">
                                    <input type="number" onchange="update_progress()" id="target_price" placeholder="1" name="target_price" required='required'/>
                                </div>
                            </div>
                            <div class="text-input" style="width:15%">
                                <div class="">
                                    <span class="">Currency</span>
                                </div>
                                <div class="select-container">
                                    
                                    <select id="currency" name="currency" required='required'>
                                        <option value=""></option>

                                        <t t-foreach="env['res.currency'].sudo().with_context(active_test=False).search([])" t-as="option">
                                            <option t-att-value="option.id">
                                                <t t-esc="option.name"/>
                                            </option>
                                        </t>    
                                    </select>
                                </div>
                            </div>
                            <div class="text-input" style="width:50%">
                                <div class="">
                                    <span class="">Destination</span>
                                </div>
                                <div class="select-container">
                                    
                                    <select id="destination" name="destination" required='required'>
                                        <option value=""></option>

                                        <t t-foreach="env['res.country'].sudo().search([])" t-as="option">
                                            <option t-att-value="option.id">
                                                <t t-esc="option.name"/>
                                            </option>
                                        </t>    
                                    </select>
                                </div>
                            </div>
                            
                        </div>
                        <t t-set="payment_terms_value" t-value="'cash_advance'"/>
                        <input type="hidden" id="payment_terms_value" />
                        <div class="" style="position:relative;">
                            <div onmouseout="hide_payment_terms(this)" class="payment_terms_info" id="payment_terms_info" style="display:none;">
                                <ul style="color:#333;">
                                    <t t-set="payment_terms_value" t-value="'cash_advance'"/>
                                    <li class="cash_advance">The purchaser makes payment for the goods or services prior to their shipment or delivery.</li>
                                    <li class="letter_of_credit">Letter of Credit (L/C) - A bank guarantees payment to the seller upon presentation of documents proving that goods have been shipped or services performed according to agreed terms.</li>
                                    <li class="documentary_collection">Documentary Collection (D/C) - Also known as 'cash against documents,' where payment is made by the buyer's bank to the seller upon presentation of specified documents.</li>
                                    <li class="open_account">Open Account - Payment is made at an agreed future date after the goods have been shipped or services rendered. This relies on the buyer's creditworthiness.</li>
                                    <li class="advance_payment">Advance Payment - A partial payment made in advance of shipment or delivery.</li>
                                    <li class="consignment">Consignment - Goods are shipped to the buyer, but the seller retains ownership until the goods are sold by the buyer.</li>
                                    <li class="cash_on_delivery">Cash on Delivery (COD) - Payment is made when the goods are delivered to the buyer.</li>
                                    <li class="payment_in_installments">Payment in Installments - The total amount is paid in multiple scheduled payments over time.</li>
                                    <li class="bill_of_exchange">Bill of Exchange - A written order from the seller to the buyer to pay a specific amount at a certain time.</li>
                                    <li class="telegraphic_transfer">Telegraphic transfer - Telegraphic Transfer (TT), also known as a wire transfer or bank transfer, is a method of transferring funds electronically from one bank account to another.</li>
                                </ul>
                            </div>
                        </div>
                        <div style="display:flex;">
                            <div class="text-input" style="width:50%">
                                <div class="">
                                    <span class="">Shipping Terms</span>
                                </div>
                                <div class="select-container">
                                    
                                    <select id="shipping_terms" name="shipping_terms" required='required'>
                                        <option value="fob">FOB (Free on Board)</option>
                                        <option value="fca">FCA (Free Carrier)</option> 
                                        <option value="exw">EXW (Ex Works)</option>                  
                                        <option value="fas">FAS (Free Alongside Ship)</option>                  
                                        <option value="dap">DAP (Delivered at Place)</option>                  
                                        <option value="dat">DAT (Delivered at Terminal)</option>                  
                                        <option value="cif">CIF (Cost, Insurance and Freight)</option>                  
                                        <option value="cip">CIP (Carriage and Insurance Paid to)</option>                  
                                        <option value="cfr">CFR (Cost and Freight)</option>                  
                                        <option value="ddp">DDP (Delivery Duty Paid)</option>  
                                        <option value="cpt">CPT (Carriage paid to)</option>                  
                                    </select>
                                </div>
                            </div>
                            <div class="text-input" style="width:50%">
                                <div class="">
                                    <span onmouseover="show_payment_terms(this)" class="" style="text-decoration:underline;">Payment Terms<i class="fa-solid fa-up-right-from-square"/></span>
                                </div>
                                <div class="select-container">
                                    
                                    <select id="payment_terms" name="payment_terms" onchange="payment_terms_change(this)" required='required'>
                                        <option value="cash_advance">Cash in Advance</option>
                                        <option value="letter_of_credit">Letter of Credit</option> 
                                        <option value="documentary_collection">Documentary Collection</option>                  
                                        <option value="open_account">Open Account</option>                  
                                        <option value="advance_payment">Advance Payment</option>                  
                                        <option value="consignment">Consignment</option>                  
                                        <option value="cash_on_delivery">Cash on Delivery (COD)</option>                  
                                        <option value="payment_in_installments">Payment in Installments</option>                  
                                        <option value="bill_of_exchange">Bill of Exchange</option>                  
                                        <option value="telegraphic_transfer">Telegraphic transfer</option>  
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div style="display:flex;">
                            <div class="text-input" style="width:50%">
                                <div class="">
                                    <span class="">Looking for Suppliers from</span>
                                </div>
                                <div class="select-container">
                                    
                                    <select id="supplier_country" name="supplier_country">
                                        <option value="">Worldwide</option>

                                        <t t-foreach="env['res.country'].sudo().search([])" t-as="option">
                                            <option t-att-value="option.id">
                                                <t t-esc="option.name"/>
                                            </option>
                                        </t>    
                                    </select>
                                </div>
                            </div>
                            <div class="text-input" style="width:50%">
                                <div class="">
                                    <span class="">Contact Person</span>
                                </div>
                                <div class="">
                                    <input type="text" id="contact_person" name="contact_person"/>
                                </div>
                            </div>
                            
                        </div>
                        <div class="text-input">
                            <div class="">
                                <span class="">Message</span>
                            </div>
                            <div class="">
                                <textarea onchange="update_progress()" id="rfq-message" name="rfq-message"/>
                                
                            </div>
                        </div>
                        
                        <div type="submit" class="post_rfq">
                            <button class="">Post RFQ</button>
                        </div>
                    </form>
                    <div class="progress-container">
                        <div id="circular-progress" class="circular-progress">
                            <span id="progress-value" class="progress-value">0%</span>
                        </div>
                        <span class="progress-text">Completed</span>
                    </div>
                </div>
                
            </main>
            <t t-call="trademeda.footer"/>


            <script>
                function show_payment_terms(element){
                    document.getElementById('payment_terms_info').style.display = 'flex'
                }
                
                <!-- function request_type_change(element){
                    const request_type = element.value 
                    fetch('/rfq/fetchCategories/'+request_type).then(function(res){
                        console.log(res)
                    })
                } -->
                function update_progress(){
                    let progress = 5
                   
                    if(document.getElementById('upload_product').value != '') {
                        progress = progress + 10
                    }
                    if(document.getElementById('category').value != '') {
                        progress = progress + 10
                    }
                    if(document.getElementById('product_subcategory').value != '') {
                        progress = progress + 10
                    }
                    if(document.getElementById('product_subsubcategory').value != '') {
                        progress = progress + 10
                    }
                    if(document.getElementById('product_name').value != '') {
                        progress = progress + 10
                    }
                    if(document.getElementById('quantity').value != '') {
                        progress = progress + 5
                    }
                    if(document.getElementById('unit').value != '') {
                        progress = progress + 5
                    }
                    if(document.getElementById('product_specification').value != '') {
                        progress = progress + 5
                    }
                    if(document.getElementById('target_price').value != '') {
                        progress = progress + 5
                    }
                    if(document.getElementById('currency').value != '') {
                        progress = progress + 5
                    }
                    if(document.getElementById('destination').value != '') {
                        progress = progress + 5
                    }
                    if(document.getElementById('shipping_terms').value != '') {
                        progress = progress + 5
                    }
                    if(document.getElementById('payment_terms').value != '') {
                        progress = progress + 5
                    }
                    <!-- if(document.getElementById('supplier_country').value != '') {
                        progress = progress + 5
                    } -->
                    if(document.getElementById('contact_person').value != '') {
                        progress = progress + 5
                    }
                    const progressBar = progress*3.6 + 'deg'
                    console.log(progressBar)
                    document.getElementById('progress-value').innerText = progress + '%'
                    document.getElementById('circular-progress').style.background = `conic-gradient(#d52805 ${progressBar}, #ededed 0deg)`;
                    <!-- document.getElementById('circular-progress').style.background = 'conic-gradient(red progressBar,#ededed 0deg)' -->

                }

                function request_type_change(element) {
                    var requestType = element.value;
                    var data = element.getAttribute('dataa')
                    var categorySelect = document.getElementById('category');
                    console.log('request_typee',data)
                    while (categorySelect.firstChild) {
                        categorySelect.removeChild(categorySelect.firstChild);
                    }
                    fetch('/get_categories/'+data).then(function(res){
                        res.json().then(function(data){

                            const option1 = document.createElement('option');
                            option1.value = ''
                            option1.textContent = ''
                            categorySelect.appendChild(option1)
                            data.forEach(function(category) {
                            const option = document.createElement('option');
                                    option.value = category.id
                                    option.textContent = category.name;
                                    
                                    categorySelect.appendChild(option)
                            })
                        })
                    })
                    update_progress()
                }

                function category_change(element){
                    let category_id = element.value
                    let product_subcategory = document.getElementById('product_subcategory')
                    while (product_subcategory.firstChild) {
                        product_subcategory.removeChild(product_subcategory.firstChild);
                    }
                    
                    fetch('profile/getsubcategories/'+category_id).then(function(res) {
                        res.json().then(function(data){
                           
                            const option1 = document.createElement('option');
                            option1.value = ''
                            option1.textContent = ''
                            product_subcategory.appendChild(option1)
                            data.forEach(function(subcategory) {
                            const option = document.createElement('option');
                                    option.value = subcategory.id
                                    option.textContent = subcategory.name;
                                    
                                    product_subcategory.appendChild(option)
                            })
                        })
                        }) 

                    update_progress()
                }

                function file_change(element){
                    element.parentElement.getElementsByClassName('file-name')[0].innerText = element.value.split('\\').reverse()[0] 
                    update_progress()
                }

                function clear_file(element){
                
                    element.parentElement.childNodes.forEach(function(e){
                        if(e.className == 'file-name'){
                        e.innerHTML = 'No file Chosen'
                    }
                    })
                    update_progress()
                }

                function subcategory_change(element){
                    let subcategory_id = element.value
                    let product_subsubcategory = document.getElementById('product_subsubcategory')
                    while (product_subsubcategory.firstChild) {
                        product_subsubcategory.removeChild(product_subsubcategory.firstChild);
                    }
                    fetch('profile/getproducts/'+subcategory_id).then(function(res) {
                        res.json().then(function(data){
                            data.forEach(function(subcategory) {
                            const option = document.createElement('option');
                                    option.value = subcategory.id
                                    option.textContent = subcategory.name;
                                    
                                    product_subsubcategory.appendChild(option)
                            })
                        })
                        }) 

                    update_progress()
                }

               
                function payment_terms_change(element) {
                    var selectedValue = element.value;
                    document.getElementById('payment_terms_value').value = selectedValue;

                    // Update the payment terms info
                    var paymentTermsInfo = document.getElementById('payment_terms_info');
                    var listItems = paymentTermsInfo.querySelectorAll('li');
                    
                    listItems.forEach(function (item) {
                        item.style.display = 'none';
                    });
                    
                    var selectedItem = paymentTermsInfo.querySelector('li.' + selectedValue);
                    if (selectedItem) {
                        selectedItem.style.display = 'list-item';
                    }
                    update_progress()
                }
                
                document.addEventListener('DOMContentLoaded', function () {
                    payment_terms_change(document.getElementById('payment_terms'));
                    var requestTypeValue = document.getElementById('request_type_value').value;
                    request_type_change({value: requestTypeValue});
                    update_progress()
                });
                
            </script>
        </template>
    </data>
</odoo>