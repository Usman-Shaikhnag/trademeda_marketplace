<odoo>
    <data>
        <template id="countries" name="Trademeda Countries">
         <xpath expr="." position="inside">
            <link rel="stylesheet" type="text/css" href="/trademeda/static/src/css/countries.css"/>
            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"/>
        </xpath>

        <t t-call="trademeda.header"/>
        <div class="tab-buttons">
            <button onclick="buyer_countries(this)" class="active">Buyer</button>
            <button onclick="supplier_countries(this)" class="">Supplier</button>

        </div>
        <div>
           
                
                <div class="text-input">
                    <div class="">
                        <span class="">Sort by</span>
                    </div>
                    <div class="select-container">
                        <select id="sort_countries" name="sort_countries" onchange="sortCountries()">
                            <option value="alphabetical">Alphabetically</option>
                            <option value="numbers">Registered Users</option>
                        </select>
                    </div>
                </div>

        </div>
        <main id="countries_list" class="countries_list">
            
            <div id="buyer_countries" class="buyer_countries" style="display:flex;flex-wrap:wrap;flex-direction: column;">
                <t t-set="countries_with_buyers" t-value="[
                    (country, env['res.partner'].sudo().search_count([('country_id', '=', country.id), ('member_type', 'in', ['buyer', 'both'])]))
                    for country in env['res.country'].sudo().search([])
                ]"/>
                <t t-set="sorted_countries_with_buyers" t-value="sorted(countries_with_buyers, key=lambda x: x[0].name)"/>
                <t t-foreach="sorted_countries_with_buyers" t-as="country">
                    <div t-att-data-name="country[0].name" t-att-data-count="country[1]">
                        <a style="text-decoration:none;color:inherit;" t-attf-href="/findBuyers/country/{{country[0].id}}">
                            <t t-esc="country[0].name"/>
                        </a>
                        <span> (<t t-esc="country[1]"/>)</span>
                    </div>
                </t>
            </div>

            <div id="supplier_countries" class="supplier_countries" style="display:none;flex-wrap:wrap;flex-direction: column;">
                <t t-set="countries_with_suppliers" t-value="[
                    (country, env['res.partner'].sudo().search_count([('country_id', '=', country.id), ('member_type', 'in', ['seller', 'both'])]))
                    for country in env['res.country'].sudo().search([])
                ]"/>
                <t t-set="sorted_countries_with_suppliers" t-value="sorted(countries_with_suppliers, key=lambda x: x[0].name)"/>
                <t t-foreach="sorted_countries_with_suppliers" t-as="country">
                    <div t-att-data-name="country[0].name" t-att-data-count="country[1]">
                        <a style="text-decoration:none;color:inherit;" t-attf-href="/findSuppliers/country/{{country[0].id}}">
                            <t t-esc="country[0].name"/>
                        </a>
                        <span> (<t t-esc="country[1]"/>)</span>
                    </div>
                </t>
            </div>
        </main>
        <script>
                function buyer_countries(element){
                    const buyer_countries = document.getElementById('buyer_countries')
                    const supplier_countries = document.getElementById('supplier_countries')
                    buyer_countries.style.display = 'flex'
                    supplier_countries.style.display = 'none'
                    element.classList.add('active')
                    element.nextElementSibling.classList.remove('active');



                }
                function supplier_countries(element){
                    const buyer_countries = document.getElementById('buyer_countries')
                    const supplier_countries = document.getElementById('supplier_countries')
                    buyer_countries.style.display = 'none'
                    supplier_countries.style.display = 'flex'
                    element.classList.add('active')
                    element.previousElementSibling.classList.remove('active');


                }
                function sortCountries() {
                    var sortType = document.getElementById('sort_countries').value;
                    var countriesList = document.getElementById('countries_list');
                    var countries = Array.prototype.slice.call(countriesList.children); // Convert NodeList to Array

                    if (sortType === 'alphabetical') {
                        countries.sort(function(a, b) {
                            var nameA = a.getAttribute('data-name').toLowerCase();
                            var nameB = b.getAttribute('data-name').toLowerCase();
                            return nameA.localeCompare(nameB);
                        });
                    } else if (sortType === 'numbers') {
                        countries.sort(function(a, b) {
                            var countA = parseInt(a.getAttribute('data-count'), 10);
                            var countB = parseInt(b.getAttribute('data-count'), 10);
                            return countB - countA; // Sort in descending order of count
                        });
                    }

                    // Clear the container and re-append sorted elements
                    countriesList.innerHTML = '';
                    for (var i = 0; i &lt; countries.length; i++) {
                        countriesList.appendChild(countries[i]);
                    }
                }
        </script>

        </template>
    </data>
</odoo>