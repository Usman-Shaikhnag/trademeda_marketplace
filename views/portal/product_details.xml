<odoo>
    <data>
        <template id="product_details" name="Product Details">
        
         <xpath expr="." position="inside">
            <link rel="stylesheet" type="text/css" href="/trademeda/static/src/css/product_details.css"/>
            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"/>
        </xpath>
        <t t-call="trademeda.header">
                
        </t>
        <style>
            #imageZoom {
                width: 100%;
                max-height: 600px;
                position: relative;
                justify-content:center;
            }
            #imageZoom img {
                max-width: 100%;
                max-height: 65vh;
                object-fit: contain;
                object-position: 0 0;
            }
            #imageZoom::after {
                display: var(--display);
                content: '';
                width: 100%;
                height: 100%;
                background-color: black;
                background-image: var(--url);
                background-size: 200%;
                background-position: var(--zoom-x) var(--zoom-y);
                position: absolute;
                left: 0;
                top: 0;
            }
        </style>
        <main> 
            <div class="product-section">
                <div class="product-details">
                    <h2><t t-esc="product.product_name"/></h2>
                    <div class="rating-container">
                        <div onload="fill_stars(this)" t-att-stars="partner.supplier_rating" class="rating">
                            <span></span>

                        </div>
                    </div>

                    </div>
                <div class="image-container">
                    <!-- <img t-att-src="'data:image/png;base64,' + product.product_image.decode('utf-8')" alt="Product Image" class="product-image zoom-image"/>
                    <div class="zoom-result"></div> -->
                    <div id="imageZoom" style="
                        --zoom-x: 0%; --zoom-y: 0%;
                        --display: none
                    ">
                        <img id="product_image" t-att-src="'data:image/png;base64,' + product.product_image.decode('utf-8')" alt="Product Image"/>
                    </div>

                </div>
                <div id="image-previews">
                    <t t-if="product.product_image"><img onclick="loadImage(this)" t-att-src="'data:image/png;base64,' + product.product_image.decode('utf-8')" alt="Product Image"/></t>
                    <t t-if="product.product_image2"><img onclick="loadImage(this)" t-att-src="'data:image/png;base64,' + product.product_image2.decode('utf-8')" alt="Product Image"/></t>
                    <t t-if="product.product_image3"><img onclick="loadImage(this)" t-att-src="'data:image/png;base64,' + product.product_image3.decode('utf-8')" alt="Product Image"/></t>
                    <t t-if="product.product_image4"><img onclick="loadImage(this)" t-att-src="'data:image/png;base64,' + product.product_image4.decode('utf-8')" alt="Product Image"/></t>
                    
                </div>
                <div class="product-details">
                    <h3>Product Details</h3>
                    <span class="bar"></span>
                    <p>
                        <t t-esc="product.product_description"/>
                    </p>

                   
                </div>
                
            </div>
            <div class="contact-section">
                <p><b>Contact Supplier</b></p>
                <form id="enquiryForm" action="/supplier/sendproductenquiry/" method="post" enctype="multipart/form-data" class="">
                    <input type="hidden" name="csrf_token" t-att-value="request.csrf_token()" />
                    <div class="inputs">
                        <input type="hidden" name="product_id" t-att-value="product.id" id="product_id"/>
                        <div class="text-input">
                            <div class="">
                                <span class="">Message</span>
                            </div>
                            <div class="">
                                <textarea placeholder="Message" name="message" id="message"/>
                            </div>
                        </div>
                        <div class="text-input">
                            <div class="">
                                <span class="">Your Name</span>
                            </div>
                            <div class="">
                                <input placeholder="Your Name" name="buyer_name" id="buyer_name"/>
                            </div>
                        </div>
                        <div class="text-input">
                            <div class="">
                                <span class="">Your Email</span>
                            </div>
                            <div class="">
                                <input type="email" placeholder="Your Email" name="buyer_email" id="buyer_email"/>
                            </div>
                        </div>
                        <div class="text-input">
                            <div class="">
                                <span class="">Your Phone</span>
                            </div>
                            <div class="">
                                <input type="number" placeholder="Your Phone" name="buyer_phone" id="buyer_phone"/>
                            </div>
                        </div>
                        <div class="text-input">
                            <div class="">
                                <span class="">Country</span>
                            </div>
                            <div class="select-container">           
                                <select id="buyer_country" name="buyer_country" class="form-control">
                                    <t t-foreach="request.env['res.country'].sudo().search([])" t-as="country">
                                        <option t-att-value="country.id">
                                            <t t-esc="country.name"/>
                                        </option>
                                    </t>
                                </select>
                            </div>
                            
                        </div>
                        <div class="multi-input">
                                <div class="text-input">
                                    <div class="">
                                        <span class="">Quantity</span>
                                    </div>
                                    <div class="">
                                        <input type="number"  name="quantity" id="quantity"/>
                                    </div>
                                </div>
                                <div class="text-input">
                                    <div class="">
                                        <span class="">Unit</span>
                                    </div>
                                    <div class="select-container">
                                            
                                        <select id="quantity_unit" name="quantity_unit">
                                            <t t-foreach="env['uom.uom'].sudo().search([])" t-as="option">
                                                <option t-att-value="option.id">
                                                    <t t-esc="option.name"/>
                                                </option>
                                            </t>    
                                            
                                        </select>
                                    </div>
                                </div>
                        </div>
                        <div class="multi-input">
                                <div class="text-input">
                                    <div class="">
                                        <span class="">Target Price</span>
                                    </div>
                                    <div class="">
                                        <input type="number"  name="target_price" id="target_price"/>
                                    </div>
                                </div>
                                <div class="text-input">
                                    <div class="">
                                        <span class="">Currency</span>
                                    </div>
                                    <div class="select-container">
                                            
                                        <select id="currency" name="currency">
                                            <t t-foreach="env['res.currency'].sudo().search([])" t-as="option">
                                                <option t-att-value="option.id">
                                                    <t t-esc="option.name"/>
                                                </option>
                                            </t>    
                                            
                                        </select>
                                    </div>
                                </div>
                        </div>
                        <div class="actions">
                            <button type="submit" t-att-data-partner-id="partner.id">Enquire now</button>
                        </div>
                    </div>
                </form>



            </div>
            
            
        </main>
        <!-- <t t-call="trademeda.footer"/> -->
        <script>

            document.addEventListener('DOMContentLoaded', function() {
                    document.querySelectorAll('.rating').forEach(function(el) {
                        fill_stars(el);
                    });
            });

            


                function fill_stars(element) {
                    const rating = element.getAttribute('stars')
                    console.log("Stars called",rating)
                    const roundedRating = Math.round(rating * 2) / 2; // Round to nearest 0.5
                    const starContainer = element; // Assuming 'starContainer' is your container element
                    starContainer.innerHTML = ''; // Clear existing stars

                    for (var i = 1; i &lt;= 5; i++) {
                        var star = document.createElementNS("http://www.w3.org/2000/svg", "svg");
                        star.setAttribute("width", "24");
                        star.setAttribute("height", "24");
                        star.setAttribute("viewBox", "0 0 24 24");

                        var polygon = document.createElementNS("http://www.w3.org/2000/svg", "polygon");
                        polygon.setAttribute("points", "12,2 15,10 23,10 17,15 19,22 12,17 5,22 7,15 1,10 9,10");

                        if (i &lt;= Math.floor(roundedRating)) {
                            polygon.setAttribute("fill", "gold"); // Full star
                        } else if (i === Math.ceil(roundedRating) &amp;&amp; roundedRating % 1 !== 0) {
                            // Create a gradient for half-star
                            var defs = document.createElementNS("http://www.w3.org/2000/svg", "defs");
                            var linearGradient = document.createElementNS("http://www.w3.org/2000/svg", "linearGradient");
                            linearGradient.setAttribute("id", "half");
                            linearGradient.setAttribute("x1", "0%");
                            linearGradient.setAttribute("x2", "100%");
                            linearGradient.setAttribute("y1", "0%");
                            linearGradient.setAttribute("y2", "0%");

                            var stop1 = document.createElementNS("http://www.w3.org/2000/svg", "stop");
                            stop1.setAttribute("offset", "50%");
                            stop1.setAttribute("stop-color", "gold");

                            var stop2 = document.createElementNS("http://www.w3.org/2000/svg", "stop");
                            stop2.setAttribute("offset", "50%");
                            stop2.setAttribute("stop-color", "gray");

                            linearGradient.appendChild(stop1);
                            linearGradient.appendChild(stop2);
                            defs.appendChild(linearGradient);
                            star.appendChild(defs);

                            polygon.setAttribute("fill", "url(#half)"); // Half star
                        } else {
                            polygon.setAttribute("fill", "gray"); // Empty star
                        }

                        star.appendChild(polygon);
                        starContainer.appendChild(star);
                    }
                }

                document.addEventListener('DOMContentLoaded', function() {
                    let imageZoom = document.getElementById('imageZoom');
                    let productImage = imageZoom.querySelector('img').getAttribute('src');  // Get the image source (base64)

                    // Set the background image for zoom
                    imageZoom.style.setProperty('--url', 'url(' + productImage + ')');

                    imageZoom.addEventListener('mousemove', function(event) {
                        imageZoom.style.setProperty('--display', 'flex');  // Show zoomed image

                        let pointer = {
                            x: (event.offsetX * 100) / imageZoom.offsetWidth,
                            y: (event.offsetY * 100) / imageZoom.offsetHeight
                        }
                        imageZoom.style.setProperty('--zoom-x', pointer.x + '%');
                        imageZoom.style.setProperty('--zoom-y', pointer.y + '%');
                    });

                    imageZoom.addEventListener('mouseout', function() {
                        imageZoom.style.setProperty('--display', 'none');  // Hide zoom when mouse is out
                    });
                });
                function loadImage(element){
                    const image_src = element.getAttribute('src');
                    let product_image = document.getElementById('product_image');
                    let imageZoom = document.getElementById('imageZoom');

                    // Update the main product image src
                    product_image.setAttribute('src', image_src);

                    // Update the zoom background image (CSS variable --url)
                    imageZoom.style.setProperty('--url', `url(${image_src})`);
                }

                
        
        </script>

        </template>
    </data>
</odoo>